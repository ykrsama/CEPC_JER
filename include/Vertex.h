// -*- C++ -*-
// AID-GENERATED
// =========================================================================
// This class was generated by AID - Abstract Interface Definition
// DO NOT MODIFY, but use the org.freehep.aid.Aid utility to regenerate it.
// =========================================================================
#ifndef EVENT_VERTEX_H
#define EVENT_VERTEX_H
#include <string>
#include "EVENT/LCObject.h"
#include "LCIOSTLTypes.h"
#include "empty_ignore.h"

namespace EVENT {
  
class ReconstructedParticle;
class Vertex ;
typedef std::vector<Vertex*> VertexVec ;
class Vertex : public LCObject {
  
public:
      virtual ~Vertex() { /* nop */; }
  
    typedef Vertex lcobject_type ;
    virtual bool isPrimary() const = 0;
  
      //public int getAlgorithmType() const ;
      virtual const std::string & getAlgorithmType() const = 0;

      virtual float getChi2() const = 0;

      virtual float getProbability() const = 0;
  
      virtual const float* getPosition() const = 0;

      virtual const FloatVec & getCovMatrix() const = 0;
  
      virtual const FloatVec & getParameters() const = 0;

      virtual ReconstructedParticle * getAssociatedParticle() const = 0;
  }; // class
} // namespace EVENT
#endif /* ifndef EVENT_VERTEX_H */
